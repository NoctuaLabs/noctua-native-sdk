stages:
  - bump-version
  - release
  - publish

.bump-version:
  image:
    name: alpine/git
    entrypoint: [""]
  before_script:
    - apk add git-cliff
    - git config --global user.email "gitlab-ci@noctua.gg"
    - git config --global user.name "Noctua Gitlab CI"
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0

bump-version-ios-sdk:
  extends: .bump-version
  stage: bump-version
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
  script: |
    set -e
    git fetch --tags

    NEW_VERSION=$(git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version || echo "v0.1.0")
    sed -i 's|^// version: ".*"|// version: "'$NEW_VERSION'"|' Package.swift

    if [ -n "$(git diff --name-only HEAD -- Package.swift)" ]; then
      echo "Bumping version to $NEW_VERSION"
      git add Package.swift
      git commit -m "bump version to $NEW_VERSION [skip ci]"
      
      if ! git rev-parse "$NEW_VERSION" >/dev/null 2>&1; then
        git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
        git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" HEAD:$CI_COMMIT_BRANCH --tags -o ci.skip
      else
        echo "Tag $NEW_VERSION already exists, skipping tag creation"
      fi
    else
      echo "No version bump required"
    fi

release-ios-sdk:
  extends: .bump-version
  stage: release
  needs: [bump-version-ios-sdk]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
  when: manual
  script: |
    set -e
    git fetch --tags
    git checkout "$CI_COMMIT_BRANCH"

    NEW_VERSION=$(git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version || echo "v0.1.0")

    sed -i 's|^// version: ".*"|// version: "'$NEW_VERSION'"|' Package.swift
    git add Package.swift

    git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bump > CHANGELOG.md
    git add CHANGELOG.md

    sed -i 's|^\*\*Current Version:\*\* `.*`|**Current Version:** `'"$NEW_VERSION"'`|' README.md
    git add README.md

    git commit -m "Release $NEW_VERSION"

    if ! git rev-parse "$NEW_VERSION" >/dev/null 2>&1; then
      git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
      git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" HEAD:$CI_COMMIT_BRANCH --tags -o ci.skip
    else
      echo "Tag $NEW_VERSION already exists, skipping tag creation"
    fi

publish-ios-sdk:
  stage: publish
  tags:
    - macmini
  needs: [release-ios-sdk]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
  when: on_success
  script: |
    set -e
    git fetch --tags
    git checkout "$CI_COMMIT_BRANCH"
    git clean -dxf

    curl -L "https://github.com/orhun/git-cliff/releases/download/v2.4.0/git-cliff-2.4.0-aarch64-apple-darwin.tar.gz" -o cliff.tar.gz
    tar -xvf cliff.tar.gz
    chmod +x ./git-cliff-2.4.0/git-cliff

    NEW_VERSION=$(./git-cliff-2.4.0/git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version || echo "v0.1.0")
    ./git-cliff-2.4.0/git-cliff --include-path "Package.swift" --tag-pattern "v.*" --latest > CHANGELOG.md
    cp CHANGELOG.md GithubRelease.md

    curl -sS https://webi.sh/gh | sh
    source ~/.config/envman/PATH.env || true
    echo "$GITHUB_ACCESS_TOKEN" | gh auth login --with-token

    git remote add github https://github.com/NoctuaLabs/noctua-native-sdk-ios.git || true
    gh release create "$NEW_VERSION" --title "$NEW_VERSION" --notes-file GithubRelease.md || echo "GitHub release already exists"
    git remote remove github

    echo "iOS SDK $NEW_VERSION published successfully"
