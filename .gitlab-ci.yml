stages:
  - bump-version
  - release
  - publish

.bump-version:
  image:
    name: alpine/git
    entrypoint: [""]
  before_script:
    - apk add git-cliff
    - git config --global user.email "gitlab-ci@noctua.gg"
    - git config --global user.name "Noctua Gitlab CI"

bump-version-ios-sdk:
  extends: 
    - .bump-version
  stage: bump-version
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
  script: |
    NEW_VERSION=$(git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version)
    sed -i '' "s/\\(version: *\\).*/\\1\"$NEW_VERSION\",/" Package.swift

    if [ -n "$(git diff --name-only HEAD -- Package.swift)" ]; then
      echo "Bumping version to v$NEW_VERSION"
      git add Package.swift
      git commit -m "bump version to v$NEW_VERSION [skip ci]"
      git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
      git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" HEAD:$CI_COMMIT_BRANCH --tags -o ci.skip
    else
      echo "No version bump required"
    fi

release-ios-sdk:
  extends: .bump-version
  stage: release
  needs: [bump-version-ios-sdk]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
  when: manual
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
  script: |
    git fetch --tags
    git checkout "$CI_COMMIT_BRANCH"
    NEW_VERSION=$(git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version)
    sed -i '' "s/\\(version: *\\).*/\\1\"$NEW_VERSION\",/" Package.swift
    git add Package.swift
    git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bump > CHANGELOG.md
    git add CHANGELOG.md
    git commit -m "Release v$NEW_VERSION"
    git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
    git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" HEAD:$CI_COMMIT_BRANCH --tags -o ci.skip

publish-ios-sdk:
  stage: publish
  tags:
    - macmini
  needs: [release-ios-sdk]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
  when: on_success
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
  script: |
    git fetch --tags
    git checkout "$CI_COMMIT_BRANCH"
    git clean -dxf
    curl -L "https://github.com/orhun/git-cliff/releases/download/v2.4.0/git-cliff-2.4.0-aarch64-apple-darwin.tar.gz" -o cliff.tar.gz
    tar -xvf cliff.tar.gz
    chmod +x ./git-cliff-2.4.0/git-cliff
    NEW_VERSION=$(./git-cliff-2.4.0/git-cliff --include-path "Package.swift" --tag-pattern "v.*" --bumped-version)
    ./git-cliff-2.4.0/git-cliff --include-path "Package.swift" --tag-pattern "v.*" --latest > GithubRelease.md
    curl -sS https://webi.sh/gh | sh
    source ~/.config/envman/PATH.env || true
    echo "$GITHUB_ACCESS_TOKEN" | gh auth login --with-token
    git remote add github https://github.com/NoctuaLabs/noctua-native-sdk-ios.git || true
    gh release create "v$NEW_VERSION" --title "v$NEW_VERSION" --notes-file GithubRelease.md || echo "GitHub release already exists"
    git remote remove github